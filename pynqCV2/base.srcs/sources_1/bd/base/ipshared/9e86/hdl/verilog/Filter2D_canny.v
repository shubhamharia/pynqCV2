// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.4
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module Filter2D_canny (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        p_src_rows_V_read,
        p_src_cols_V_read,
        p_src_data_stream_V_dout,
        p_src_data_stream_V_empty_n,
        p_src_data_stream_V_read,
        p_dst_data_stream_V_din,
        p_dst_data_stream_V_full_n,
        p_dst_data_stream_V_write,
        p_kernel_val_0_V_1_read,
        p_kernel_val_0_V_2_read,
        p_kernel_val_1_V_0_read,
        p_kernel_val_1_V_2_read,
        p_kernel_val_2_V_0_read,
        p_kernel_val_2_V_1_read
);

parameter    ap_ST_fsm_state1 = 6'd1;
parameter    ap_ST_fsm_state2 = 6'd2;
parameter    ap_ST_fsm_state3 = 6'd4;
parameter    ap_ST_fsm_state4 = 6'd8;
parameter    ap_ST_fsm_pp0_stage0 = 6'd16;
parameter    ap_ST_fsm_state16 = 6'd32;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] p_src_rows_V_read;
input  [31:0] p_src_cols_V_read;
input  [7:0] p_src_data_stream_V_dout;
input   p_src_data_stream_V_empty_n;
output   p_src_data_stream_V_read;
output  [15:0] p_dst_data_stream_V_din;
input   p_dst_data_stream_V_full_n;
output   p_dst_data_stream_V_write;
input  [1:0] p_kernel_val_0_V_1_read;
input  [1:0] p_kernel_val_0_V_2_read;
input  [2:0] p_kernel_val_1_V_0_read;
input  [3:0] p_kernel_val_1_V_2_read;
input  [1:0] p_kernel_val_2_V_0_read;
input  [2:0] p_kernel_val_2_V_1_read;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg p_src_data_stream_V_read;
reg p_dst_data_stream_V_write;

(* fsm_encoding = "none" *) reg   [5:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    p_src_data_stream_V_blk_n;
reg    ap_enable_reg_pp0_iter2;
wire    ap_block_pp0_stage0;
reg   [0:0] exitcond388_i_reg_1553;
reg   [0:0] ap_reg_pp0_iter1_exitcond388_i_reg_1553;
reg   [0:0] or_cond_i_i_reg_1584;
reg   [0:0] icmp_reg_1444;
reg   [0:0] tmp_58_reg_1435;
reg    p_dst_data_stream_V_blk_n;
reg    ap_enable_reg_pp0_iter10;
reg   [0:0] or_cond_i_reg_1580;
reg   [0:0] ap_reg_pp0_iter9_or_cond_i_reg_1580;
reg   [10:0] t_V_3_reg_320;
reg   [7:0] reg_331;
wire    ap_block_state5_pp0_stage0_iter0;
wire    ap_block_state6_pp0_stage0_iter1;
reg    ap_predicate_op181_read_state7;
reg    ap_predicate_op182_read_state7;
reg    ap_block_state7_pp0_stage0_iter2;
wire    ap_block_state8_pp0_stage0_iter3;
wire    ap_block_state9_pp0_stage0_iter4;
wire    ap_block_state10_pp0_stage0_iter5;
wire    ap_block_state11_pp0_stage0_iter6;
wire    ap_block_state12_pp0_stage0_iter7;
wire    ap_block_state13_pp0_stage0_iter8;
wire    ap_block_state14_pp0_stage0_iter9;
reg    ap_block_state15_pp0_stage0_iter10;
reg    ap_block_pp0_stage0_11001;
reg   [7:0] ap_reg_pp0_iter3_reg_331;
wire   [10:0] tmp_s_fu_342_p2;
wire   [10:0] tmp_87_fu_348_p1;
wire   [10:0] tmp_50_fu_352_p2;
wire   [1:0] tmp_93_fu_362_p1;
wire   [11:0] tmp_95_fu_366_p1;
wire   [11:0] tmp_100_fu_374_p1;
wire   [12:0] tmp_229_cast_cast_fu_392_p1;
wire   [1:0] tmp_55_fu_396_p2;
wire  signed [9:0] OP2_V_0_1_cast_fu_414_p1;
reg  signed [9:0] OP2_V_0_1_cast_reg_1381;
wire  signed [9:0] OP2_V_0_2_cast_fu_418_p1;
reg  signed [9:0] OP2_V_0_2_cast_reg_1386;
wire  signed [10:0] OP2_V_1_cast_fu_422_p1;
reg  signed [10:0] OP2_V_1_cast_reg_1391;
wire   [11:0] OP2_V_1_2_cast_fu_426_p1;
reg   [11:0] OP2_V_1_2_cast_reg_1396;
wire  signed [9:0] OP2_V_2_cast_fu_430_p1;
reg  signed [9:0] OP2_V_2_cast_reg_1401;
wire   [10:0] OP2_V_2_1_cast_fu_434_p1;
reg   [10:0] OP2_V_2_1_cast_reg_1406;
wire   [12:0] tmp_69_cast_cast_fu_452_p1;
wire   [1:0] tmp_73_fu_456_p2;
wire   [1:0] tmp_74_fu_462_p2;
wire   [10:0] i_V_fu_477_p2;
reg   [10:0] i_V_reg_1430;
wire    ap_CS_fsm_state2;
wire   [0:0] tmp_58_fu_483_p2;
wire   [0:0] exitcond389_i_fu_472_p2;
wire   [0:0] ult_fu_488_p2;
reg   [0:0] ult_reg_1439;
wire   [0:0] icmp_fu_503_p2;
wire   [0:0] tmp_60_fu_509_p2;
reg   [0:0] tmp_60_reg_1449;
wire   [0:0] tmp_190_1_fu_515_p2;
reg   [0:0] tmp_190_1_reg_1453;
wire   [0:0] tmp_61_fu_521_p2;
reg   [0:0] tmp_61_reg_1457;
wire   [11:0] tmp_68_fu_526_p2;
reg   [11:0] tmp_68_reg_1464;
reg   [0:0] tmp_104_reg_1472;
wire   [11:0] p_assign_7_fu_540_p2;
reg   [11:0] p_assign_7_reg_1477;
wire   [11:0] p_assign_6_1_fu_546_p2;
reg   [11:0] p_assign_6_1_reg_1482;
reg   [0:0] tmp_106_reg_1490;
wire   [11:0] p_assign_7_1_fu_560_p2;
reg   [11:0] p_assign_7_1_reg_1495;
wire   [11:0] p_assign_6_2_fu_566_p2;
reg   [11:0] p_assign_6_2_reg_1500;
reg   [0:0] tmp_109_reg_1508;
wire   [11:0] p_assign_7_2_fu_580_p2;
reg   [11:0] p_assign_7_2_reg_1513;
wire   [1:0] tmp_116_fu_721_p3;
reg   [1:0] tmp_116_reg_1518;
wire    ap_CS_fsm_state3;
wire   [1:0] tmp_77_fu_745_p3;
reg   [1:0] tmp_77_reg_1523;
wire   [1:0] tmp_80_fu_769_p3;
reg   [1:0] tmp_80_reg_1528;
wire   [0:0] rev_fu_777_p2;
reg   [0:0] rev_reg_1533;
wire    ap_CS_fsm_state4;
wire   [1:0] tmp_117_fu_787_p2;
reg   [1:0] tmp_117_reg_1538;
wire   [1:0] row_assign_10_1_t_fu_792_p2;
reg   [1:0] row_assign_10_1_t_reg_1543;
wire   [1:0] row_assign_10_2_t_fu_796_p2;
reg   [1:0] row_assign_10_2_t_reg_1548;
wire   [0:0] exitcond388_i_fu_804_p2;
wire    ap_CS_fsm_pp0_stage0;
reg   [0:0] ap_reg_pp0_iter2_exitcond388_i_reg_1553;
reg   [0:0] ap_reg_pp0_iter3_exitcond388_i_reg_1553;
reg   [0:0] ap_reg_pp0_iter4_exitcond388_i_reg_1553;
reg   [0:0] ap_reg_pp0_iter5_exitcond388_i_reg_1553;
wire   [10:0] j_V_fu_809_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [11:0] ImagLoc_x_fu_831_p2;
reg   [11:0] ImagLoc_x_reg_1562;
reg   [0:0] tmp_121_reg_1568;
wire   [11:0] p_p2_i_i_fu_859_p3;
reg   [11:0] p_p2_i_i_reg_1574;
wire   [0:0] or_cond_i_fu_867_p2;
reg   [0:0] ap_reg_pp0_iter1_or_cond_i_reg_1580;
reg   [0:0] ap_reg_pp0_iter2_or_cond_i_reg_1580;
reg   [0:0] ap_reg_pp0_iter3_or_cond_i_reg_1580;
reg   [0:0] ap_reg_pp0_iter4_or_cond_i_reg_1580;
reg   [0:0] ap_reg_pp0_iter5_or_cond_i_reg_1580;
reg   [0:0] ap_reg_pp0_iter6_or_cond_i_reg_1580;
reg   [0:0] ap_reg_pp0_iter7_or_cond_i_reg_1580;
reg   [0:0] ap_reg_pp0_iter8_or_cond_i_reg_1580;
wire   [0:0] or_cond_i_i_fu_884_p2;
reg   [0:0] ap_reg_pp0_iter2_or_cond_i_i_reg_1584;
reg   [0:0] ap_reg_pp0_iter3_or_cond_i_i_reg_1584;
wire   [12:0] x_fu_927_p3;
reg   [12:0] x_reg_1588;
wire   [1:0] tmp_123_fu_935_p1;
reg   [1:0] tmp_123_reg_1593;
wire   [0:0] brmerge_fu_939_p2;
reg   [0:0] brmerge_reg_1598;
reg   [0:0] ap_reg_pp0_iter2_brmerge_reg_1598;
reg   [10:0] k_buf_0_val_3_addr_reg_1605;
wire   [1:0] col_assign_3_t_fu_954_p2;
reg   [1:0] col_assign_3_t_reg_1611;
reg   [10:0] k_buf_0_val_4_addr_reg_1618;
reg   [10:0] ap_reg_pp0_iter3_k_buf_0_val_4_addr_reg_1618;
reg   [10:0] k_buf_0_val_5_addr_reg_1624;
reg   [10:0] ap_reg_pp0_iter3_k_buf_0_val_5_addr_reg_1624;
wire   [7:0] k_buf_0_val_3_q0;
reg   [7:0] k_buf_0_val_3_load_reg_1630;
reg    ap_enable_reg_pp0_iter3;
wire   [7:0] col_buf_0_val_0_0_fu_987_p3;
reg   [7:0] col_buf_0_val_0_0_reg_1635;
wire   [7:0] k_buf_0_val_4_q0;
reg   [7:0] k_buf_0_val_4_load_reg_1643;
wire   [7:0] col_buf_0_val_1_0_fu_1005_p3;
reg   [7:0] col_buf_0_val_1_0_reg_1648;
wire   [7:0] col_buf_0_val_2_0_fu_1023_p3;
reg   [7:0] col_buf_0_val_2_0_reg_1656;
wire   [7:0] src_kernel_win_0_va_6_fu_1074_p3;
reg   [7:0] src_kernel_win_0_va_6_reg_1664;
reg   [7:0] ap_reg_pp0_iter5_src_kernel_win_0_va_6_reg_1664;
reg   [7:0] ap_reg_pp0_iter6_src_kernel_win_0_va_6_reg_1664;
reg   [7:0] ap_reg_pp0_iter7_src_kernel_win_0_va_6_reg_1664;
wire   [7:0] src_kernel_win_0_va_7_fu_1088_p3;
reg   [7:0] src_kernel_win_0_va_7_reg_1670;
reg   [7:0] ap_reg_pp0_iter5_src_kernel_win_0_va_7_reg_1670;
reg   [7:0] ap_reg_pp0_iter6_src_kernel_win_0_va_7_reg_1670;
wire   [7:0] src_kernel_win_0_va_8_fu_1102_p3;
reg   [7:0] src_kernel_win_0_va_8_reg_1676;
reg   [7:0] src_kernel_win_0_va_16_reg_1686;
reg   [7:0] ap_reg_pp0_iter5_src_kernel_win_0_va_16_reg_1686;
reg   [7:0] src_kernel_win_0_va_9_reg_1696;
wire  signed [10:0] grp_fu_1216_p3;
reg  signed [10:0] p_Val2_4_0_1_reg_1701;
reg    ap_enable_reg_pp0_iter6;
wire  signed [10:0] grp_fu_1223_p3;
reg  signed [10:0] p_Val2_4_0_2_reg_1716;
reg    ap_enable_reg_pp0_iter7;
wire  signed [11:0] grp_fu_1229_p3;
reg  signed [11:0] p_Val2_4_1_1_reg_1731;
reg    ap_enable_reg_pp0_iter8;
wire  signed [9:0] grp_fu_1236_p3;
reg  signed [9:0] tmp25_reg_1736;
wire  signed [11:0] grp_fu_1243_p3;
reg  signed [11:0] tmp23_reg_1741;
reg    ap_enable_reg_pp0_iter9;
wire  signed [10:0] grp_fu_1249_p3;
reg  signed [10:0] tmp24_reg_1746;
reg    ap_block_pp0_stage0_subdone;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter4;
reg    ap_condition_pp0_exit_iter3_state8;
reg    ap_enable_reg_pp0_iter5;
wire   [10:0] k_buf_0_val_3_address0;
reg    k_buf_0_val_3_ce0;
reg    k_buf_0_val_3_ce1;
reg    k_buf_0_val_3_we1;
wire   [10:0] k_buf_0_val_4_address0;
reg    k_buf_0_val_4_ce0;
reg    k_buf_0_val_4_ce1;
reg    k_buf_0_val_4_we1;
reg   [7:0] k_buf_0_val_4_d1;
wire   [10:0] k_buf_0_val_5_address0;
reg    k_buf_0_val_5_ce0;
wire   [7:0] k_buf_0_val_5_q0;
reg    k_buf_0_val_5_ce1;
reg    k_buf_0_val_5_we1;
reg   [7:0] k_buf_0_val_5_d1;
reg   [10:0] t_V_reg_309;
wire    ap_CS_fsm_state16;
wire   [63:0] tmp_82_fu_947_p1;
reg    ap_block_pp0_stage0_01001;
reg   [7:0] src_kernel_win_0_va_fu_146;
reg   [7:0] src_kernel_win_0_va_1_fu_150;
reg   [7:0] src_kernel_win_0_va_2_fu_154;
reg   [7:0] src_kernel_win_0_va_3_fu_158;
reg   [7:0] src_kernel_win_0_va_4_fu_162;
reg   [7:0] src_kernel_win_0_va_5_fu_166;
reg   [7:0] right_border_buf_0_s_fu_170;
reg   [7:0] right_border_buf_0_1_fu_174;
reg   [7:0] right_border_buf_0_2_fu_178;
reg   [7:0] right_border_buf_0_3_fu_182;
reg   [7:0] right_border_buf_0_4_fu_186;
reg   [7:0] right_border_buf_0_5_fu_190;
wire   [10:0] tmp_81_fu_338_p1;
wire   [11:0] tmp_53_fu_378_p3;
wire   [11:0] tmp_54_fu_386_p2;
wire   [1:0] tmp_89_fu_358_p1;
wire   [0:0] tmp_101_fu_402_p1;
wire   [11:0] tmp_56_fu_438_p3;
wire   [11:0] tmp_57_fu_446_p2;
wire   [1:0] tmp_71_fu_406_p3;
wire   [1:0] tmp_98_fu_370_p1;
wire   [9:0] tmp_102_fu_493_p4;
wire   [11:0] t_V_cast_fu_468_p1;
wire   [0:0] tmp_103_fu_586_p3;
wire   [0:0] tmp_70_fu_599_p2;
wire   [0:0] rev11_fu_593_p2;
wire   [11:0] p_p2_i425_i_fu_609_p3;
wire  signed [12:0] p_p2_i425_i_cast_cast_fu_614_p1;
wire   [0:0] tmp_105_fu_628_p3;
wire   [0:0] tmp_216_1_fu_641_p2;
wire   [0:0] rev12_fu_635_p2;
wire   [11:0] p_p2_i425_i_1_fu_651_p3;
wire   [0:0] tmp_108_fu_665_p3;
wire   [0:0] tmp_216_2_fu_678_p2;
wire   [0:0] rev13_fu_672_p2;
wire   [11:0] p_p2_i425_i_2_fu_688_p3;
wire   [12:0] p_assign_8_fu_623_p2;
wire   [0:0] tmp_72_fu_618_p2;
wire   [1:0] tmp_113_fu_705_p1;
wire   [1:0] tmp_114_fu_709_p1;
wire   [0:0] or_cond_i424_i_fu_603_p2;
wire   [1:0] tmp_112_fu_702_p1;
wire   [1:0] tmp_115_fu_713_p3;
wire   [1:0] tmp_107_fu_661_p1;
wire   [0:0] tmp_226_1_fu_656_p2;
wire   [1:0] tmp_75_fu_729_p2;
wire   [0:0] or_cond_i424_i_1_fu_645_p2;
wire   [1:0] tmp_118_fu_742_p1;
wire   [1:0] tmp_76_fu_734_p3;
wire   [1:0] tmp_110_fu_698_p1;
wire   [0:0] tmp_226_2_fu_693_p2;
wire   [1:0] tmp_78_fu_753_p2;
wire   [0:0] or_cond_i424_i_2_fu_682_p2;
wire   [1:0] tmp_119_fu_766_p1;
wire   [1:0] tmp_79_fu_758_p3;
wire   [1:0] tmp_111_fu_782_p2;
wire   [9:0] tmp_120_fu_815_p4;
wire   [11:0] t_V_3_cast_fu_800_p1;
wire   [0:0] tmp_122_fu_845_p3;
wire   [11:0] p_assign_1_fu_853_p2;
wire   [0:0] icmp3_fu_825_p2;
wire   [0:0] tmp_65_fu_880_p2;
wire   [0:0] rev14_fu_875_p2;
wire  signed [12:0] p_p2_i_i_cast_cast_fu_890_p1;
wire  signed [12:0] ImagLoc_x_cast_cast_fu_872_p1;
wire   [12:0] p_assign_2_fu_897_p2;
wire   [0:0] tmp_65_not_fu_910_p2;
wire   [0:0] tmp_67_fu_893_p2;
wire   [0:0] sel_tmp7_fu_916_p2;
wire   [0:0] sel_tmp8_fu_921_p2;
wire   [12:0] sel_tmp_fu_902_p3;
wire  signed [31:0] col_assign_cast_fu_944_p1;
wire   [7:0] tmp_83_fu_976_p5;
wire   [7:0] tmp_84_fu_994_p5;
wire   [7:0] tmp_85_fu_1012_p5;
wire   [7:0] tmp_86_fu_1066_p5;
wire   [7:0] tmp_88_fu_1080_p5;
wire   [7:0] tmp_90_fu_1094_p5;
wire   [8:0] OP1_V_0_cast_fu_1138_p1;
wire  signed [8:0] r_V_8_fu_1142_p2;
wire  signed [11:0] tmp24_cast_fu_1203_p1;
(* use_dsp48 = "no" *) wire   [11:0] p_Val2_1_fu_1206_p2;
wire   [7:0] grp_fu_1216_p0;
wire  signed [1:0] grp_fu_1216_p1;
wire   [7:0] grp_fu_1223_p0;
wire  signed [1:0] grp_fu_1223_p1;
wire   [7:0] grp_fu_1229_p0;
wire  signed [2:0] grp_fu_1229_p1;
wire   [7:0] grp_fu_1236_p0;
wire  signed [1:0] grp_fu_1236_p1;
wire   [7:0] grp_fu_1236_p2;
wire   [7:0] grp_fu_1243_p0;
wire   [3:0] grp_fu_1243_p1;
wire   [7:0] grp_fu_1249_p0;
wire   [2:0] grp_fu_1249_p1;
reg    grp_fu_1216_ce;
reg    grp_fu_1223_ce;
reg    grp_fu_1229_ce;
reg    grp_fu_1236_ce;
reg    grp_fu_1243_ce;
reg    grp_fu_1249_ce;
reg   [5:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire   [9:0] grp_fu_1216_p00;
wire   [9:0] grp_fu_1223_p00;
wire   [10:0] grp_fu_1229_p00;
wire   [9:0] grp_fu_1236_p00;
wire   [9:0] grp_fu_1236_p20;
wire   [11:0] grp_fu_1243_p00;
wire   [10:0] grp_fu_1249_p00;
reg    ap_condition_1176;

// power-on initialization
initial begin
#0 ap_CS_fsm = 6'd1;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
end

Filter2D_k_buf_0_cud #(
    .DataWidth( 8 ),
    .AddressRange( 1920 ),
    .AddressWidth( 11 ))
k_buf_0_val_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(k_buf_0_val_3_address0),
    .ce0(k_buf_0_val_3_ce0),
    .q0(k_buf_0_val_3_q0),
    .address1(k_buf_0_val_3_addr_reg_1605),
    .ce1(k_buf_0_val_3_ce1),
    .we1(k_buf_0_val_3_we1),
    .d1(reg_331)
);

Filter2D_k_buf_0_cud #(
    .DataWidth( 8 ),
    .AddressRange( 1920 ),
    .AddressWidth( 11 ))
k_buf_0_val_4_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(k_buf_0_val_4_address0),
    .ce0(k_buf_0_val_4_ce0),
    .q0(k_buf_0_val_4_q0),
    .address1(ap_reg_pp0_iter3_k_buf_0_val_4_addr_reg_1618),
    .ce1(k_buf_0_val_4_ce1),
    .we1(k_buf_0_val_4_we1),
    .d1(k_buf_0_val_4_d1)
);

Filter2D_k_buf_0_cud #(
    .DataWidth( 8 ),
    .AddressRange( 1920 ),
    .AddressWidth( 11 ))
k_buf_0_val_5_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(k_buf_0_val_5_address0),
    .ce0(k_buf_0_val_5_ce0),
    .q0(k_buf_0_val_5_q0),
    .address1(ap_reg_pp0_iter3_k_buf_0_val_5_addr_reg_1624),
    .ce1(k_buf_0_val_5_ce1),
    .we1(k_buf_0_val_5_we1),
    .d1(k_buf_0_val_5_d1)
);

canny_edge_mux_32fYi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
canny_edge_mux_32fYi_U15(
    .din0(right_border_buf_0_s_fu_170),
    .din1(right_border_buf_0_1_fu_174),
    .din2(8'd0),
    .din3(col_assign_3_t_reg_1611),
    .dout(tmp_83_fu_976_p5)
);

canny_edge_mux_32fYi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
canny_edge_mux_32fYi_U16(
    .din0(right_border_buf_0_3_fu_182),
    .din1(right_border_buf_0_4_fu_186),
    .din2(8'd0),
    .din3(col_assign_3_t_reg_1611),
    .dout(tmp_84_fu_994_p5)
);

canny_edge_mux_32fYi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
canny_edge_mux_32fYi_U17(
    .din0(right_border_buf_0_5_fu_190),
    .din1(right_border_buf_0_2_fu_178),
    .din2(8'd0),
    .din3(col_assign_3_t_reg_1611),
    .dout(tmp_85_fu_1012_p5)
);

canny_edge_mux_32fYi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
canny_edge_mux_32fYi_U18(
    .din0(col_buf_0_val_0_0_reg_1635),
    .din1(col_buf_0_val_1_0_reg_1648),
    .din2(col_buf_0_val_2_0_reg_1656),
    .din3(tmp_117_reg_1538),
    .dout(tmp_86_fu_1066_p5)
);

canny_edge_mux_32fYi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
canny_edge_mux_32fYi_U19(
    .din0(col_buf_0_val_0_0_reg_1635),
    .din1(col_buf_0_val_1_0_reg_1648),
    .din2(col_buf_0_val_2_0_reg_1656),
    .din3(row_assign_10_1_t_reg_1543),
    .dout(tmp_88_fu_1080_p5)
);

canny_edge_mux_32fYi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
canny_edge_mux_32fYi_U20(
    .din0(col_buf_0_val_0_0_reg_1635),
    .din1(col_buf_0_val_1_0_reg_1648),
    .din2(col_buf_0_val_2_0_reg_1656),
    .din3(row_assign_10_2_t_reg_1548),
    .dout(tmp_90_fu_1094_p5)
);

canny_edge_mac_mug8j #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 2 ),
    .din2_WIDTH( 9 ),
    .dout_WIDTH( 11 ))
canny_edge_mac_mug8j_U21(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1216_p0),
    .din1(grp_fu_1216_p1),
    .din2(r_V_8_fu_1142_p2),
    .ce(grp_fu_1216_ce),
    .dout(grp_fu_1216_p3)
);

canny_edge_mac_muhbi #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 2 ),
    .din2_WIDTH( 11 ),
    .dout_WIDTH( 11 ))
canny_edge_mac_muhbi_U22(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1223_p0),
    .din1(grp_fu_1223_p1),
    .din2(p_Val2_4_0_1_reg_1701),
    .ce(grp_fu_1223_ce),
    .dout(grp_fu_1223_p3)
);

canny_edge_mac_muibs #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 3 ),
    .din2_WIDTH( 11 ),
    .dout_WIDTH( 12 ))
canny_edge_mac_muibs_U23(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1229_p0),
    .din1(grp_fu_1229_p1),
    .din2(p_Val2_4_0_2_reg_1716),
    .ce(grp_fu_1229_ce),
    .dout(grp_fu_1229_p3)
);

canny_edge_mac_mujbC #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 2 ),
    .din2_WIDTH( 8 ),
    .dout_WIDTH( 10 ))
canny_edge_mac_mujbC_U24(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1236_p0),
    .din1(grp_fu_1236_p1),
    .din2(grp_fu_1236_p2),
    .ce(grp_fu_1236_ce),
    .dout(grp_fu_1236_p3)
);

canny_edge_mac_mukbM #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 4 ),
    .din2_WIDTH( 12 ),
    .dout_WIDTH( 12 ))
canny_edge_mac_mukbM_U25(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1243_p0),
    .din1(grp_fu_1243_p1),
    .din2(p_Val2_4_1_1_reg_1731),
    .ce(grp_fu_1243_ce),
    .dout(grp_fu_1243_p3)
);

canny_edge_mac_mulbW #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 3 ),
    .din2_WIDTH( 10 ),
    .dout_WIDTH( 11 ))
canny_edge_mac_mulbW_U26(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1249_p0),
    .din1(grp_fu_1249_p1),
    .din2(tmp25_reg_1736),
    .ce(grp_fu_1249_ce),
    .dout(grp_fu_1249_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((exitcond388_i_fu_804_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state4)) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end else if ((1'b1 == ap_CS_fsm_state4)) begin
            ap_enable_reg_pp0_iter10 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter3_state8)) begin
                ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter2;
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond388_i_fu_804_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        t_V_3_reg_320 <= j_V_fu_809_p2;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        t_V_3_reg_320 <= 11'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        t_V_reg_309 <= i_V_reg_1430;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        t_V_reg_309 <= 11'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond388_i_fu_804_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ImagLoc_x_reg_1562 <= ImagLoc_x_fu_831_p2;
        or_cond_i_reg_1580 <= or_cond_i_fu_867_p2;
        p_p2_i_i_reg_1574 <= p_p2_i_i_fu_859_p3;
        tmp_121_reg_1568 <= ImagLoc_x_fu_831_p2[32'd11];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        OP2_V_0_1_cast_reg_1381 <= OP2_V_0_1_cast_fu_414_p1;
        OP2_V_0_2_cast_reg_1386 <= OP2_V_0_2_cast_fu_418_p1;
        OP2_V_1_2_cast_reg_1396[3 : 0] <= OP2_V_1_2_cast_fu_426_p1[3 : 0];
        OP2_V_1_cast_reg_1391 <= OP2_V_1_cast_fu_422_p1;
        OP2_V_2_1_cast_reg_1406[2 : 0] <= OP2_V_2_1_cast_fu_434_p1[2 : 0];
        OP2_V_2_cast_reg_1401 <= OP2_V_2_cast_fu_430_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_reg_pp0_iter1_exitcond388_i_reg_1553 <= exitcond388_i_reg_1553;
        ap_reg_pp0_iter1_or_cond_i_reg_1580 <= or_cond_i_reg_1580;
        exitcond388_i_reg_1553 <= exitcond388_i_fu_804_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        ap_reg_pp0_iter2_brmerge_reg_1598 <= brmerge_reg_1598;
        ap_reg_pp0_iter2_exitcond388_i_reg_1553 <= ap_reg_pp0_iter1_exitcond388_i_reg_1553;
        ap_reg_pp0_iter2_or_cond_i_i_reg_1584 <= or_cond_i_i_reg_1584;
        ap_reg_pp0_iter2_or_cond_i_reg_1580 <= ap_reg_pp0_iter1_or_cond_i_reg_1580;
        ap_reg_pp0_iter3_exitcond388_i_reg_1553 <= ap_reg_pp0_iter2_exitcond388_i_reg_1553;
        ap_reg_pp0_iter3_k_buf_0_val_4_addr_reg_1618 <= k_buf_0_val_4_addr_reg_1618;
        ap_reg_pp0_iter3_k_buf_0_val_5_addr_reg_1624 <= k_buf_0_val_5_addr_reg_1624;
        ap_reg_pp0_iter3_or_cond_i_i_reg_1584 <= ap_reg_pp0_iter2_or_cond_i_i_reg_1584;
        ap_reg_pp0_iter3_or_cond_i_reg_1580 <= ap_reg_pp0_iter2_or_cond_i_reg_1580;
        ap_reg_pp0_iter3_reg_331 <= reg_331;
        ap_reg_pp0_iter4_exitcond388_i_reg_1553 <= ap_reg_pp0_iter3_exitcond388_i_reg_1553;
        ap_reg_pp0_iter4_or_cond_i_reg_1580 <= ap_reg_pp0_iter3_or_cond_i_reg_1580;
        ap_reg_pp0_iter5_exitcond388_i_reg_1553 <= ap_reg_pp0_iter4_exitcond388_i_reg_1553;
        ap_reg_pp0_iter5_or_cond_i_reg_1580 <= ap_reg_pp0_iter4_or_cond_i_reg_1580;
        ap_reg_pp0_iter5_src_kernel_win_0_va_16_reg_1686 <= src_kernel_win_0_va_16_reg_1686;
        ap_reg_pp0_iter5_src_kernel_win_0_va_6_reg_1664 <= src_kernel_win_0_va_6_reg_1664;
        ap_reg_pp0_iter5_src_kernel_win_0_va_7_reg_1670 <= src_kernel_win_0_va_7_reg_1670;
        ap_reg_pp0_iter6_or_cond_i_reg_1580 <= ap_reg_pp0_iter5_or_cond_i_reg_1580;
        ap_reg_pp0_iter6_src_kernel_win_0_va_6_reg_1664 <= ap_reg_pp0_iter5_src_kernel_win_0_va_6_reg_1664;
        ap_reg_pp0_iter6_src_kernel_win_0_va_7_reg_1670 <= ap_reg_pp0_iter5_src_kernel_win_0_va_7_reg_1670;
        ap_reg_pp0_iter7_or_cond_i_reg_1580 <= ap_reg_pp0_iter6_or_cond_i_reg_1580;
        ap_reg_pp0_iter7_src_kernel_win_0_va_6_reg_1664 <= ap_reg_pp0_iter6_src_kernel_win_0_va_6_reg_1664;
        ap_reg_pp0_iter8_or_cond_i_reg_1580 <= ap_reg_pp0_iter7_or_cond_i_reg_1580;
        ap_reg_pp0_iter9_or_cond_i_reg_1580 <= ap_reg_pp0_iter8_or_cond_i_reg_1580;
        src_kernel_win_0_va_6_reg_1664 <= src_kernel_win_0_va_6_fu_1074_p3;
        src_kernel_win_0_va_7_reg_1670 <= src_kernel_win_0_va_7_fu_1088_p3;
        src_kernel_win_0_va_8_reg_1676 <= src_kernel_win_0_va_8_fu_1102_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond388_i_reg_1553 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        brmerge_reg_1598 <= brmerge_fu_939_p2;
        or_cond_i_i_reg_1584 <= or_cond_i_i_fu_884_p2;
        tmp_123_reg_1593 <= tmp_123_fu_935_p1;
        x_reg_1588 <= x_fu_927_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter1_exitcond388_i_reg_1553 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        col_assign_3_t_reg_1611 <= col_assign_3_t_fu_954_p2;
        k_buf_0_val_3_addr_reg_1605 <= tmp_82_fu_947_p1;
        k_buf_0_val_4_addr_reg_1618 <= tmp_82_fu_947_p1;
        k_buf_0_val_5_addr_reg_1624 <= tmp_82_fu_947_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter2_exitcond388_i_reg_1553 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        col_buf_0_val_0_0_reg_1635 <= col_buf_0_val_0_0_fu_987_p3;
        col_buf_0_val_1_0_reg_1648 <= col_buf_0_val_1_0_fu_1005_p3;
        col_buf_0_val_2_0_reg_1656 <= col_buf_0_val_2_0_fu_1023_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        i_V_reg_1430 <= i_V_fu_477_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond389_i_fu_472_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        icmp_reg_1444 <= icmp_fu_503_p2;
        p_assign_6_1_reg_1482 <= p_assign_6_1_fu_546_p2;
        p_assign_6_2_reg_1500 <= p_assign_6_2_fu_566_p2;
        p_assign_7_1_reg_1495 <= p_assign_7_1_fu_560_p2;
        p_assign_7_2_reg_1513 <= p_assign_7_2_fu_580_p2;
        p_assign_7_reg_1477 <= p_assign_7_fu_540_p2;
        tmp_104_reg_1472 <= tmp_68_fu_526_p2[32'd11];
        tmp_106_reg_1490 <= p_assign_6_1_fu_546_p2[32'd11];
        tmp_109_reg_1508 <= p_assign_6_2_fu_566_p2[32'd11];
        tmp_190_1_reg_1453 <= tmp_190_1_fu_515_p2;
        tmp_58_reg_1435 <= tmp_58_fu_483_p2;
        tmp_60_reg_1449 <= tmp_60_fu_509_p2;
        tmp_61_reg_1457 <= tmp_61_fu_521_p2;
        tmp_68_reg_1464 <= tmp_68_fu_526_p2;
        ult_reg_1439 <= ult_fu_488_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter2_exitcond388_i_reg_1553 == 1'd0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        k_buf_0_val_3_load_reg_1630 <= k_buf_0_val_3_q0;
        k_buf_0_val_4_load_reg_1643 <= k_buf_0_val_4_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter5_or_cond_i_reg_1580 == 1'd1) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_Val2_4_0_1_reg_1701 <= grp_fu_1216_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter6_or_cond_i_reg_1580 == 1'd1) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_Val2_4_0_2_reg_1716 <= grp_fu_1223_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter7_or_cond_i_reg_1580 == 1'd1) & (ap_enable_reg_pp0_iter8 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_Val2_4_1_1_reg_1731 <= grp_fu_1229_p3;
        tmp25_reg_1736 <= grp_fu_1236_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((((ap_enable_reg_pp0_iter2 == 1'b1) & (ap_predicate_op182_read_state7 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (ap_predicate_op181_read_state7 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        reg_331 <= p_src_data_stream_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        rev_reg_1533 <= rev_fu_777_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_58_reg_1435 == 1'd1) & (icmp_reg_1444 == 1'd1) & (ap_reg_pp0_iter2_or_cond_i_i_reg_1584 == 1'd1) & (ap_reg_pp0_iter2_exitcond388_i_reg_1553 == 1'd0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        right_border_buf_0_1_fu_174 <= right_border_buf_0_s_fu_170;
        right_border_buf_0_2_fu_178 <= right_border_buf_0_5_fu_190;
        right_border_buf_0_3_fu_182 <= col_buf_0_val_1_0_fu_1005_p3;
        right_border_buf_0_4_fu_186 <= right_border_buf_0_3_fu_182;
        right_border_buf_0_5_fu_190 <= col_buf_0_val_2_0_fu_1023_p3;
        right_border_buf_0_s_fu_170 <= col_buf_0_val_0_0_fu_987_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_61_reg_1457 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        row_assign_10_1_t_reg_1543 <= row_assign_10_1_t_fu_792_p2;
        row_assign_10_2_t_reg_1548 <= row_assign_10_2_t_fu_796_p2;
        tmp_117_reg_1538 <= tmp_117_fu_787_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter3_exitcond388_i_reg_1553 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        src_kernel_win_0_va_16_reg_1686 <= src_kernel_win_0_va_4_fu_162;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter5_exitcond388_i_reg_1553 == 1'd0) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        src_kernel_win_0_va_1_fu_150 <= src_kernel_win_0_va_fu_146;
        src_kernel_win_0_va_2_fu_154 <= ap_reg_pp0_iter5_src_kernel_win_0_va_7_reg_1670;
        src_kernel_win_0_va_3_fu_158 <= src_kernel_win_0_va_2_fu_154;
        src_kernel_win_0_va_5_fu_166 <= ap_reg_pp0_iter5_src_kernel_win_0_va_16_reg_1686;
        src_kernel_win_0_va_fu_146 <= ap_reg_pp0_iter5_src_kernel_win_0_va_6_reg_1664;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter3_exitcond388_i_reg_1553 == 1'd0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        src_kernel_win_0_va_4_fu_162 <= src_kernel_win_0_va_8_fu_1102_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter5_or_cond_i_reg_1580 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        src_kernel_win_0_va_9_reg_1696 <= src_kernel_win_0_va_fu_146;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_reg_pp0_iter8_or_cond_i_reg_1580 == 1'd1) & (ap_enable_reg_pp0_iter9 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp23_reg_1741 <= grp_fu_1243_p3;
        tmp24_reg_1746 <= grp_fu_1249_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_61_reg_1457 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        tmp_116_reg_1518 <= tmp_116_fu_721_p3;
        tmp_77_reg_1523 <= tmp_77_fu_745_p3;
        tmp_80_reg_1528 <= tmp_80_fu_769_p3;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        ap_condition_pp0_exit_iter3_state8 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter3_state8 = 1'b0;
    end
end

always @ (*) begin
    if ((((exitcond389_i_fu_472_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2)) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond389_i_fu_472_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_1216_ce = 1'b1;
    end else begin
        grp_fu_1216_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_1223_ce = 1'b1;
    end else begin
        grp_fu_1223_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_1229_ce = 1'b1;
    end else begin
        grp_fu_1229_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_1236_ce = 1'b1;
    end else begin
        grp_fu_1236_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_1243_ce = 1'b1;
    end else begin
        grp_fu_1243_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_1249_ce = 1'b1;
    end else begin
        grp_fu_1249_ce = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        k_buf_0_val_3_ce0 = 1'b1;
    end else begin
        k_buf_0_val_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((tmp_58_reg_1435 == 1'd1) & (icmp_reg_1444 == 1'd1) & (ap_reg_pp0_iter2_or_cond_i_i_reg_1584 == 1'd1) & (ap_reg_pp0_iter2_exitcond388_i_reg_1553 == 1'd0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_reg_pp0_iter2_or_cond_i_i_reg_1584 == 1'd1) & (tmp_60_reg_1449 == 1'd1) & (icmp_reg_1444 == 1'd0) & (ap_reg_pp0_iter2_exitcond388_i_reg_1553 == 1'd0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        k_buf_0_val_3_ce1 = 1'b1;
    end else begin
        k_buf_0_val_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((((tmp_58_reg_1435 == 1'd1) & (icmp_reg_1444 == 1'd1) & (ap_reg_pp0_iter2_or_cond_i_i_reg_1584 == 1'd1) & (ap_reg_pp0_iter2_exitcond388_i_reg_1553 == 1'd0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_reg_pp0_iter2_or_cond_i_i_reg_1584 == 1'd1) & (tmp_60_reg_1449 == 1'd1) & (icmp_reg_1444 == 1'd0) & (ap_reg_pp0_iter2_exitcond388_i_reg_1553 == 1'd0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        k_buf_0_val_3_we1 = 1'b1;
    end else begin
        k_buf_0_val_3_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        k_buf_0_val_4_ce0 = 1'b1;
    end else begin
        k_buf_0_val_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((tmp_58_reg_1435 == 1'd1) & (icmp_reg_1444 == 1'd1) & (ap_reg_pp0_iter3_or_cond_i_i_reg_1584 == 1'd1) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_reg_pp0_iter3_or_cond_i_i_reg_1584 == 1'd1) & (tmp_190_1_reg_1453 == 1'd1) & (icmp_reg_1444 == 1'd0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        k_buf_0_val_4_ce1 = 1'b1;
    end else begin
        k_buf_0_val_4_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_1176)) begin
        if (((tmp_58_reg_1435 == 1'd1) & (icmp_reg_1444 == 1'd1))) begin
            k_buf_0_val_4_d1 = k_buf_0_val_3_load_reg_1630;
        end else if (((tmp_190_1_reg_1453 == 1'd1) & (icmp_reg_1444 == 1'd0))) begin
            k_buf_0_val_4_d1 = ap_reg_pp0_iter3_reg_331;
        end else begin
            k_buf_0_val_4_d1 = 'bx;
        end
    end else begin
        k_buf_0_val_4_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((tmp_58_reg_1435 == 1'd1) & (icmp_reg_1444 == 1'd1) & (ap_reg_pp0_iter3_or_cond_i_i_reg_1584 == 1'd1) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_reg_pp0_iter3_or_cond_i_i_reg_1584 == 1'd1) & (tmp_190_1_reg_1453 == 1'd1) & (icmp_reg_1444 == 1'd0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        k_buf_0_val_4_we1 = 1'b1;
    end else begin
        k_buf_0_val_4_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        k_buf_0_val_5_ce0 = 1'b1;
    end else begin
        k_buf_0_val_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((tmp_58_reg_1435 == 1'd1) & (icmp_reg_1444 == 1'd1) & (ap_reg_pp0_iter3_or_cond_i_i_reg_1584 == 1'd1) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_reg_pp0_iter3_or_cond_i_i_reg_1584 == 1'd1) & (tmp_60_reg_1449 == 1'd1) & (icmp_reg_1444 == 1'd0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        k_buf_0_val_5_ce1 = 1'b1;
    end else begin
        k_buf_0_val_5_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_1176)) begin
        if (((tmp_58_reg_1435 == 1'd1) & (icmp_reg_1444 == 1'd1))) begin
            k_buf_0_val_5_d1 = k_buf_0_val_4_load_reg_1643;
        end else if (((tmp_60_reg_1449 == 1'd1) & (icmp_reg_1444 == 1'd0))) begin
            k_buf_0_val_5_d1 = ap_reg_pp0_iter3_reg_331;
        end else begin
            k_buf_0_val_5_d1 = 'bx;
        end
    end else begin
        k_buf_0_val_5_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((tmp_58_reg_1435 == 1'd1) & (icmp_reg_1444 == 1'd1) & (ap_reg_pp0_iter3_or_cond_i_i_reg_1584 == 1'd1) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_reg_pp0_iter3_or_cond_i_i_reg_1584 == 1'd1) & (tmp_60_reg_1449 == 1'd1) & (icmp_reg_1444 == 1'd0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        k_buf_0_val_5_we1 = 1'b1;
    end else begin
        k_buf_0_val_5_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_reg_pp0_iter9_or_cond_i_reg_1580 == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter10 == 1'b1))) begin
        p_dst_data_stream_V_blk_n = p_dst_data_stream_V_full_n;
    end else begin
        p_dst_data_stream_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_reg_pp0_iter9_or_cond_i_reg_1580 == 1'd1) & (ap_enable_reg_pp0_iter10 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_dst_data_stream_V_write = 1'b1;
    end else begin
        p_dst_data_stream_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((((tmp_58_reg_1435 == 1'd1) & (icmp_reg_1444 == 1'd1) & (or_cond_i_i_reg_1584 == 1'd1) & (ap_reg_pp0_iter1_exitcond388_i_reg_1553 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((or_cond_i_i_reg_1584 == 1'd1) & (icmp_reg_1444 == 1'd0) & (ap_reg_pp0_iter1_exitcond388_i_reg_1553 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1)))) begin
        p_src_data_stream_V_blk_n = p_src_data_stream_V_empty_n;
    end else begin
        p_src_data_stream_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter2 == 1'b1) & (ap_predicate_op182_read_state7 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (ap_predicate_op181_read_state7 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        p_src_data_stream_V_read = 1'b1;
    end else begin
        p_src_data_stream_V_read = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((exitcond389_i_fu_472_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter3 == 1'b1)) & ~((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b1)) | ((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter3 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ImagLoc_x_cast_cast_fu_872_p1 = $signed(ImagLoc_x_reg_1562);

assign ImagLoc_x_fu_831_p2 = ($signed(12'd4095) + $signed(t_V_3_cast_fu_800_p1));

assign OP1_V_0_cast_fu_1138_p1 = src_kernel_win_0_va_5_fu_166;

assign OP2_V_0_1_cast_fu_414_p1 = $signed(p_kernel_val_0_V_1_read);

assign OP2_V_0_2_cast_fu_418_p1 = $signed(p_kernel_val_0_V_2_read);

assign OP2_V_1_2_cast_fu_426_p1 = p_kernel_val_1_V_2_read;

assign OP2_V_1_cast_fu_422_p1 = $signed(p_kernel_val_1_V_0_read);

assign OP2_V_2_1_cast_fu_434_p1 = p_kernel_val_2_V_1_read;

assign OP2_V_2_cast_fu_430_p1 = $signed(p_kernel_val_2_V_0_read);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((ap_reg_pp0_iter9_or_cond_i_reg_1580 == 1'd1) & (p_dst_data_stream_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b1)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op182_read_state7 == 1'b1)) | ((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op181_read_state7 == 1'b1)))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((ap_reg_pp0_iter9_or_cond_i_reg_1580 == 1'd1) & (p_dst_data_stream_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b1)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op182_read_state7 == 1'b1)) | ((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op181_read_state7 == 1'b1)))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((ap_reg_pp0_iter9_or_cond_i_reg_1580 == 1'd1) & (p_dst_data_stream_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b1)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op182_read_state7 == 1'b1)) | ((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op181_read_state7 == 1'b1)))));
end

assign ap_block_state10_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state15_pp0_stage0_iter10 = ((ap_reg_pp0_iter9_or_cond_i_reg_1580 == 1'd1) & (p_dst_data_stream_V_full_n == 1'b0));
end

assign ap_block_state5_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state7_pp0_stage0_iter2 = (((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op182_read_state7 == 1'b1)) | ((p_src_data_stream_V_empty_n == 1'b0) & (ap_predicate_op181_read_state7 == 1'b1)));
end

assign ap_block_state8_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_1176 = ((ap_reg_pp0_iter3_or_cond_i_i_reg_1584 == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

always @ (*) begin
    ap_predicate_op181_read_state7 = ((or_cond_i_i_reg_1584 == 1'd1) & (icmp_reg_1444 == 1'd0) & (ap_reg_pp0_iter1_exitcond388_i_reg_1553 == 1'd0));
end

always @ (*) begin
    ap_predicate_op182_read_state7 = ((tmp_58_reg_1435 == 1'd1) & (icmp_reg_1444 == 1'd1) & (or_cond_i_i_reg_1584 == 1'd1) & (ap_reg_pp0_iter1_exitcond388_i_reg_1553 == 1'd0));
end

assign brmerge_fu_939_p2 = (tmp_65_fu_880_p2 | rev_reg_1533);

assign col_assign_3_t_fu_954_p2 = (tmp_74_fu_462_p2 - tmp_123_reg_1593);

assign col_assign_cast_fu_944_p1 = $signed(x_reg_1588);

assign col_buf_0_val_0_0_fu_987_p3 = ((ap_reg_pp0_iter2_brmerge_reg_1598[0:0] === 1'b1) ? k_buf_0_val_3_q0 : tmp_83_fu_976_p5);

assign col_buf_0_val_1_0_fu_1005_p3 = ((ap_reg_pp0_iter2_brmerge_reg_1598[0:0] === 1'b1) ? k_buf_0_val_4_q0 : tmp_84_fu_994_p5);

assign col_buf_0_val_2_0_fu_1023_p3 = ((ap_reg_pp0_iter2_brmerge_reg_1598[0:0] === 1'b1) ? k_buf_0_val_5_q0 : tmp_85_fu_1012_p5);

assign exitcond388_i_fu_804_p2 = ((t_V_3_reg_320 == tmp_s_fu_342_p2) ? 1'b1 : 1'b0);

assign exitcond389_i_fu_472_p2 = ((t_V_reg_309 == tmp_50_fu_352_p2) ? 1'b1 : 1'b0);

assign grp_fu_1216_p0 = grp_fu_1216_p00;

assign grp_fu_1216_p00 = src_kernel_win_0_va_4_fu_162;

assign grp_fu_1216_p1 = OP2_V_0_1_cast_reg_1381;

assign grp_fu_1223_p0 = grp_fu_1223_p00;

assign grp_fu_1223_p00 = src_kernel_win_0_va_8_reg_1676;

assign grp_fu_1223_p1 = OP2_V_0_2_cast_reg_1386;

assign grp_fu_1229_p0 = grp_fu_1229_p00;

assign grp_fu_1229_p00 = src_kernel_win_0_va_3_fu_158;

assign grp_fu_1229_p1 = OP2_V_1_cast_reg_1391;

assign grp_fu_1236_p0 = grp_fu_1236_p00;

assign grp_fu_1236_p00 = src_kernel_win_0_va_1_fu_150;

assign grp_fu_1236_p1 = OP2_V_2_cast_reg_1401;

assign grp_fu_1236_p2 = grp_fu_1236_p20;

assign grp_fu_1236_p20 = ap_reg_pp0_iter7_src_kernel_win_0_va_6_reg_1664;

assign grp_fu_1243_p0 = grp_fu_1243_p00;

assign grp_fu_1243_p00 = ap_reg_pp0_iter6_src_kernel_win_0_va_7_reg_1670;

assign grp_fu_1243_p1 = OP2_V_1_2_cast_reg_1396;

assign grp_fu_1249_p0 = grp_fu_1249_p00;

assign grp_fu_1249_p00 = src_kernel_win_0_va_9_reg_1696;

assign grp_fu_1249_p1 = OP2_V_2_1_cast_reg_1406;

assign i_V_fu_477_p2 = (t_V_reg_309 + 11'd1);

assign icmp3_fu_825_p2 = ((tmp_120_fu_815_p4 != 10'd0) ? 1'b1 : 1'b0);

assign icmp_fu_503_p2 = ((tmp_102_fu_493_p4 != 10'd0) ? 1'b1 : 1'b0);

assign j_V_fu_809_p2 = (t_V_3_reg_320 + 11'd1);

assign k_buf_0_val_3_address0 = tmp_82_fu_947_p1;

assign k_buf_0_val_4_address0 = tmp_82_fu_947_p1;

assign k_buf_0_val_5_address0 = tmp_82_fu_947_p1;

assign or_cond_i424_i_1_fu_645_p2 = (tmp_216_1_fu_641_p2 & rev12_fu_635_p2);

assign or_cond_i424_i_2_fu_682_p2 = (tmp_216_2_fu_678_p2 & rev13_fu_672_p2);

assign or_cond_i424_i_fu_603_p2 = (tmp_70_fu_599_p2 & rev11_fu_593_p2);

assign or_cond_i_fu_867_p2 = (icmp_reg_1444 & icmp3_fu_825_p2);

assign or_cond_i_i_fu_884_p2 = (tmp_65_fu_880_p2 & rev14_fu_875_p2);

assign p_Val2_1_fu_1206_p2 = ($signed(tmp24_cast_fu_1203_p1) + $signed(tmp23_reg_1741));

assign p_assign_1_fu_853_p2 = (12'd1 - t_V_3_cast_fu_800_p1);

assign p_assign_2_fu_897_p2 = ($signed(tmp_69_cast_cast_fu_452_p1) - $signed(p_p2_i_i_cast_cast_fu_890_p1));

assign p_assign_6_1_fu_546_p2 = ($signed(t_V_cast_fu_468_p1) + $signed(12'd4094));

assign p_assign_6_2_fu_566_p2 = ($signed(t_V_cast_fu_468_p1) + $signed(12'd4093));

assign p_assign_7_1_fu_560_p2 = (12'd2 - t_V_cast_fu_468_p1);

assign p_assign_7_2_fu_580_p2 = (12'd3 - t_V_cast_fu_468_p1);

assign p_assign_7_fu_540_p2 = (12'd1 - t_V_cast_fu_468_p1);

assign p_assign_8_fu_623_p2 = ($signed(tmp_229_cast_cast_fu_392_p1) - $signed(p_p2_i425_i_cast_cast_fu_614_p1));

assign p_dst_data_stream_V_din = $signed(p_Val2_1_fu_1206_p2);

assign p_p2_i425_i_1_fu_651_p3 = ((tmp_106_reg_1490[0:0] === 1'b1) ? p_assign_7_1_reg_1495 : p_assign_6_1_reg_1482);

assign p_p2_i425_i_2_fu_688_p3 = ((tmp_109_reg_1508[0:0] === 1'b1) ? p_assign_7_2_reg_1513 : p_assign_6_2_reg_1500);

assign p_p2_i425_i_cast_cast_fu_614_p1 = $signed(p_p2_i425_i_fu_609_p3);

assign p_p2_i425_i_fu_609_p3 = ((tmp_104_reg_1472[0:0] === 1'b1) ? p_assign_7_reg_1477 : tmp_68_reg_1464);

assign p_p2_i_i_cast_cast_fu_890_p1 = $signed(p_p2_i_i_reg_1574);

assign p_p2_i_i_fu_859_p3 = ((tmp_122_fu_845_p3[0:0] === 1'b1) ? p_assign_1_fu_853_p2 : ImagLoc_x_fu_831_p2);

assign r_V_8_fu_1142_p2 = (9'd0 - OP1_V_0_cast_fu_1138_p1);

assign rev11_fu_593_p2 = (tmp_103_fu_586_p3 ^ 1'd1);

assign rev12_fu_635_p2 = (tmp_105_fu_628_p3 ^ 1'd1);

assign rev13_fu_672_p2 = (tmp_108_fu_665_p3 ^ 1'd1);

assign rev14_fu_875_p2 = (tmp_121_reg_1568 ^ 1'd1);

assign rev_fu_777_p2 = (ult_reg_1439 ^ 1'd1);

assign row_assign_10_1_t_fu_792_p2 = (tmp_55_fu_396_p2 - tmp_77_reg_1523);

assign row_assign_10_2_t_fu_796_p2 = (tmp_55_fu_396_p2 - tmp_80_reg_1528);

assign sel_tmp7_fu_916_p2 = (tmp_65_not_fu_910_p2 | tmp_121_reg_1568);

assign sel_tmp8_fu_921_p2 = (tmp_67_fu_893_p2 & sel_tmp7_fu_916_p2);

assign sel_tmp_fu_902_p3 = ((or_cond_i_i_fu_884_p2[0:0] === 1'b1) ? ImagLoc_x_cast_cast_fu_872_p1 : p_assign_2_fu_897_p2);

assign src_kernel_win_0_va_6_fu_1074_p3 = ((tmp_61_reg_1457[0:0] === 1'b1) ? tmp_86_fu_1066_p5 : col_buf_0_val_0_0_reg_1635);

assign src_kernel_win_0_va_7_fu_1088_p3 = ((tmp_61_reg_1457[0:0] === 1'b1) ? tmp_88_fu_1080_p5 : col_buf_0_val_1_0_reg_1648);

assign src_kernel_win_0_va_8_fu_1102_p3 = ((tmp_61_reg_1457[0:0] === 1'b1) ? tmp_90_fu_1094_p5 : col_buf_0_val_2_0_reg_1656);

assign t_V_3_cast_fu_800_p1 = t_V_3_reg_320;

assign t_V_cast_fu_468_p1 = t_V_reg_309;

assign tmp24_cast_fu_1203_p1 = tmp24_reg_1746;

assign tmp_100_fu_374_p1 = p_src_rows_V_read[11:0];

assign tmp_101_fu_402_p1 = p_src_rows_V_read[0:0];

assign tmp_102_fu_493_p4 = {{t_V_reg_309[10:1]}};

assign tmp_103_fu_586_p3 = tmp_68_reg_1464[32'd11];

assign tmp_105_fu_628_p3 = p_assign_6_1_reg_1482[32'd11];

assign tmp_107_fu_661_p1 = p_p2_i425_i_1_fu_651_p3[1:0];

assign tmp_108_fu_665_p3 = p_assign_6_2_reg_1500[32'd11];

assign tmp_110_fu_698_p1 = p_p2_i425_i_2_fu_688_p3[1:0];

assign tmp_111_fu_782_p2 = ($signed(tmp_93_fu_362_p1) + $signed(2'd3));

assign tmp_112_fu_702_p1 = tmp_68_reg_1464[1:0];

assign tmp_113_fu_705_p1 = p_p2_i425_i_fu_609_p3[1:0];

assign tmp_114_fu_709_p1 = p_assign_8_fu_623_p2[1:0];

assign tmp_115_fu_713_p3 = ((tmp_72_fu_618_p2[0:0] === 1'b1) ? tmp_113_fu_705_p1 : tmp_114_fu_709_p1);

assign tmp_116_fu_721_p3 = ((or_cond_i424_i_fu_603_p2[0:0] === 1'b1) ? tmp_112_fu_702_p1 : tmp_115_fu_713_p3);

assign tmp_117_fu_787_p2 = (tmp_111_fu_782_p2 - tmp_116_reg_1518);

assign tmp_118_fu_742_p1 = p_assign_6_1_reg_1482[1:0];

assign tmp_119_fu_766_p1 = p_assign_6_2_reg_1500[1:0];

assign tmp_120_fu_815_p4 = {{t_V_3_reg_320[10:1]}};

assign tmp_122_fu_845_p3 = ImagLoc_x_fu_831_p2[32'd11];

assign tmp_123_fu_935_p1 = x_fu_927_p3[1:0];

assign tmp_190_1_fu_515_p2 = ((t_V_reg_309 == 11'd0) ? 1'b1 : 1'b0);

assign tmp_216_1_fu_641_p2 = (($signed(p_assign_6_1_reg_1482) < $signed(tmp_100_fu_374_p1)) ? 1'b1 : 1'b0);

assign tmp_216_2_fu_678_p2 = (($signed(p_assign_6_2_reg_1500) < $signed(tmp_100_fu_374_p1)) ? 1'b1 : 1'b0);

assign tmp_226_1_fu_656_p2 = (($signed(p_p2_i425_i_1_fu_651_p3) < $signed(tmp_100_fu_374_p1)) ? 1'b1 : 1'b0);

assign tmp_226_2_fu_693_p2 = (($signed(p_p2_i425_i_2_fu_688_p3) < $signed(tmp_100_fu_374_p1)) ? 1'b1 : 1'b0);

assign tmp_229_cast_cast_fu_392_p1 = tmp_54_fu_386_p2;

assign tmp_50_fu_352_p2 = (11'd2 + tmp_87_fu_348_p1);

assign tmp_53_fu_378_p3 = {{tmp_87_fu_348_p1}, {1'd0}};

assign tmp_54_fu_386_p2 = (12'd2 + tmp_53_fu_378_p3);

assign tmp_55_fu_396_p2 = ($signed(2'd3) + $signed(tmp_89_fu_358_p1));

assign tmp_56_fu_438_p3 = {{tmp_81_fu_338_p1}, {1'd0}};

assign tmp_57_fu_446_p2 = ($signed(12'd4094) + $signed(tmp_56_fu_438_p3));

assign tmp_58_fu_483_p2 = ((t_V_reg_309 < tmp_87_fu_348_p1) ? 1'b1 : 1'b0);

assign tmp_60_fu_509_p2 = ((t_V_reg_309 == 11'd1) ? 1'b1 : 1'b0);

assign tmp_61_fu_521_p2 = ((t_V_reg_309 > tmp_87_fu_348_p1) ? 1'b1 : 1'b0);

assign tmp_65_fu_880_p2 = (($signed(ImagLoc_x_reg_1562) < $signed(tmp_95_fu_366_p1)) ? 1'b1 : 1'b0);

assign tmp_65_not_fu_910_p2 = (tmp_65_fu_880_p2 ^ 1'd1);

assign tmp_67_fu_893_p2 = (($signed(p_p2_i_i_reg_1574) < $signed(tmp_95_fu_366_p1)) ? 1'b1 : 1'b0);

assign tmp_68_fu_526_p2 = ($signed(t_V_cast_fu_468_p1) + $signed(12'd4095));

assign tmp_69_cast_cast_fu_452_p1 = tmp_57_fu_446_p2;

assign tmp_70_fu_599_p2 = (($signed(tmp_68_reg_1464) < $signed(tmp_100_fu_374_p1)) ? 1'b1 : 1'b0);

assign tmp_71_fu_406_p3 = {{tmp_101_fu_402_p1}, {1'd0}};

assign tmp_72_fu_618_p2 = (($signed(p_p2_i425_i_fu_609_p3) < $signed(tmp_100_fu_374_p1)) ? 1'b1 : 1'b0);

assign tmp_73_fu_456_p2 = (tmp_71_fu_406_p3 ^ 2'd2);

assign tmp_74_fu_462_p2 = ($signed(2'd3) + $signed(tmp_98_fu_370_p1));

assign tmp_75_fu_729_p2 = (tmp_73_fu_456_p2 - tmp_107_fu_661_p1);

assign tmp_76_fu_734_p3 = ((tmp_226_1_fu_656_p2[0:0] === 1'b1) ? tmp_107_fu_661_p1 : tmp_75_fu_729_p2);

assign tmp_77_fu_745_p3 = ((or_cond_i424_i_1_fu_645_p2[0:0] === 1'b1) ? tmp_118_fu_742_p1 : tmp_76_fu_734_p3);

assign tmp_78_fu_753_p2 = (tmp_73_fu_456_p2 - tmp_110_fu_698_p1);

assign tmp_79_fu_758_p3 = ((tmp_226_2_fu_693_p2[0:0] === 1'b1) ? tmp_110_fu_698_p1 : tmp_78_fu_753_p2);

assign tmp_80_fu_769_p3 = ((or_cond_i424_i_2_fu_682_p2[0:0] === 1'b1) ? tmp_119_fu_766_p1 : tmp_79_fu_758_p3);

assign tmp_81_fu_338_p1 = p_src_cols_V_read[10:0];

assign tmp_82_fu_947_p1 = $unsigned(col_assign_cast_fu_944_p1);

assign tmp_87_fu_348_p1 = p_src_rows_V_read[10:0];

assign tmp_89_fu_358_p1 = p_src_rows_V_read[1:0];

assign tmp_93_fu_362_p1 = p_src_rows_V_read[1:0];

assign tmp_95_fu_366_p1 = p_src_cols_V_read[11:0];

assign tmp_98_fu_370_p1 = p_src_cols_V_read[1:0];

assign tmp_s_fu_342_p2 = (11'd2 + tmp_81_fu_338_p1);

assign ult_fu_488_p2 = ((t_V_reg_309 < tmp_87_fu_348_p1) ? 1'b1 : 1'b0);

assign x_fu_927_p3 = ((sel_tmp8_fu_921_p2[0:0] === 1'b1) ? p_p2_i_i_cast_cast_fu_890_p1 : sel_tmp_fu_902_p3);

always @ (posedge ap_clk) begin
    OP2_V_1_2_cast_reg_1396[11:4] <= 8'b00000000;
    OP2_V_2_1_cast_reg_1406[10:3] <= 8'b00000000;
end

endmodule //Filter2D
