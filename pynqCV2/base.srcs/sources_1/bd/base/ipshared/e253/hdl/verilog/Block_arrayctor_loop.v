// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.4
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module Block_arrayctor_loop (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        mode,
        cols,
        rows,
        switch_out_out_din,
        switch_out_out_full_n,
        switch_out_out_write,
        tmp_out_out_din,
        tmp_out_out_full_n,
        tmp_out_out_write,
        rows_cast727_out_out_din,
        rows_cast727_out_out_full_n,
        rows_cast727_out_out_write,
        tmp_15_out_out_din,
        tmp_15_out_out_full_n,
        tmp_15_out_out_write,
        tmp_16_out_out_din,
        tmp_16_out_out_full_n,
        tmp_16_out_out_write,
        tmp_16_cast_out_out_din,
        tmp_16_cast_out_out_full_n,
        tmp_16_cast_out_out_write,
        p_neg393_i_out_out_din,
        p_neg393_i_out_out_full_n,
        p_neg393_i_out_out_write,
        p_neg393_i_cast_out_out_din,
        p_neg393_i_cast_out_out_full_n,
        p_neg393_i_cast_out_out_write
);

parameter    ap_ST_fsm_state1 = 2'd1;
parameter    ap_ST_fsm_state2 = 2'd2;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [31:0] mode;
input  [31:0] cols;
input  [31:0] rows;
output  [0:0] switch_out_out_din;
input   switch_out_out_full_n;
output   switch_out_out_write;
output  [10:0] tmp_out_out_din;
input   tmp_out_out_full_n;
output   tmp_out_out_write;
output  [10:0] rows_cast727_out_out_din;
input   rows_cast727_out_out_full_n;
output   rows_cast727_out_out_write;
output  [10:0] tmp_15_out_out_din;
input   tmp_15_out_out_full_n;
output   tmp_15_out_out_write;
output  [10:0] tmp_16_out_out_din;
input   tmp_16_out_out_full_n;
output   tmp_16_out_out_write;
output  [10:0] tmp_16_cast_out_out_din;
input   tmp_16_cast_out_out_full_n;
output   tmp_16_cast_out_out_write;
output  [10:0] p_neg393_i_out_out_din;
input   p_neg393_i_out_out_full_n;
output   p_neg393_i_out_out_write;
output  [10:0] p_neg393_i_cast_out_out_din;
input   p_neg393_i_cast_out_out_full_n;
output   p_neg393_i_cast_out_out_write;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg switch_out_out_write;
reg tmp_out_out_write;
reg rows_cast727_out_out_write;
reg tmp_15_out_out_write;
reg tmp_16_out_out_write;
reg tmp_16_cast_out_out_write;
reg p_neg393_i_out_out_write;
reg p_neg393_i_cast_out_out_write;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [1:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    switch_out_out_blk_n;
wire    ap_CS_fsm_state2;
reg    tmp_out_out_blk_n;
reg    rows_cast727_out_out_blk_n;
reg    tmp_15_out_out_blk_n;
reg    tmp_16_out_out_blk_n;
reg    tmp_16_cast_out_out_blk_n;
reg    p_neg393_i_out_out_blk_n;
reg    p_neg393_i_cast_out_out_blk_n;
reg    ap_block_state1;
reg    ap_block_state2;
wire   [10:0] tmp_38_fu_263_p1;
wire   [10:0] tmp_16_i_fu_275_p2;
wire   [10:0] p_neg393_i_i_fu_283_p2;
wire   [31:0] mode_off_i_fu_230_p2;
wire   [30:0] tmp_fu_236_p4;
wire   [10:0] tmp_37_fu_252_p1;
reg   [1:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 2'd1;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((~((p_neg393_i_cast_out_out_full_n == 1'b0) | (p_neg393_i_out_out_full_n == 1'b0) | (tmp_16_cast_out_out_full_n == 1'b0) | (tmp_16_out_out_full_n == 1'b0) | (tmp_15_out_out_full_n == 1'b0) | (rows_cast727_out_out_full_n == 1'b0) | (tmp_out_out_full_n == 1'b0) | (switch_out_out_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (*) begin
    if ((~((p_neg393_i_cast_out_out_full_n == 1'b0) | (p_neg393_i_out_out_full_n == 1'b0) | (tmp_16_cast_out_out_full_n == 1'b0) | (tmp_16_out_out_full_n == 1'b0) | (tmp_15_out_out_full_n == 1'b0) | (rows_cast727_out_out_full_n == 1'b0) | (tmp_out_out_full_n == 1'b0) | (switch_out_out_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((~((p_neg393_i_cast_out_out_full_n == 1'b0) | (p_neg393_i_out_out_full_n == 1'b0) | (tmp_16_cast_out_out_full_n == 1'b0) | (tmp_16_out_out_full_n == 1'b0) | (tmp_15_out_out_full_n == 1'b0) | (rows_cast727_out_out_full_n == 1'b0) | (tmp_out_out_full_n == 1'b0) | (switch_out_out_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        p_neg393_i_cast_out_out_blk_n = p_neg393_i_cast_out_out_full_n;
    end else begin
        p_neg393_i_cast_out_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((p_neg393_i_cast_out_out_full_n == 1'b0) | (p_neg393_i_out_out_full_n == 1'b0) | (tmp_16_cast_out_out_full_n == 1'b0) | (tmp_16_out_out_full_n == 1'b0) | (tmp_15_out_out_full_n == 1'b0) | (rows_cast727_out_out_full_n == 1'b0) | (tmp_out_out_full_n == 1'b0) | (switch_out_out_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state2))) begin
        p_neg393_i_cast_out_out_write = 1'b1;
    end else begin
        p_neg393_i_cast_out_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        p_neg393_i_out_out_blk_n = p_neg393_i_out_out_full_n;
    end else begin
        p_neg393_i_out_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((p_neg393_i_cast_out_out_full_n == 1'b0) | (p_neg393_i_out_out_full_n == 1'b0) | (tmp_16_cast_out_out_full_n == 1'b0) | (tmp_16_out_out_full_n == 1'b0) | (tmp_15_out_out_full_n == 1'b0) | (rows_cast727_out_out_full_n == 1'b0) | (tmp_out_out_full_n == 1'b0) | (switch_out_out_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state2))) begin
        p_neg393_i_out_out_write = 1'b1;
    end else begin
        p_neg393_i_out_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        rows_cast727_out_out_blk_n = rows_cast727_out_out_full_n;
    end else begin
        rows_cast727_out_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((p_neg393_i_cast_out_out_full_n == 1'b0) | (p_neg393_i_out_out_full_n == 1'b0) | (tmp_16_cast_out_out_full_n == 1'b0) | (tmp_16_out_out_full_n == 1'b0) | (tmp_15_out_out_full_n == 1'b0) | (rows_cast727_out_out_full_n == 1'b0) | (tmp_out_out_full_n == 1'b0) | (switch_out_out_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state2))) begin
        rows_cast727_out_out_write = 1'b1;
    end else begin
        rows_cast727_out_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        switch_out_out_blk_n = switch_out_out_full_n;
    end else begin
        switch_out_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((p_neg393_i_cast_out_out_full_n == 1'b0) | (p_neg393_i_out_out_full_n == 1'b0) | (tmp_16_cast_out_out_full_n == 1'b0) | (tmp_16_out_out_full_n == 1'b0) | (tmp_15_out_out_full_n == 1'b0) | (rows_cast727_out_out_full_n == 1'b0) | (tmp_out_out_full_n == 1'b0) | (switch_out_out_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state2))) begin
        switch_out_out_write = 1'b1;
    end else begin
        switch_out_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        tmp_15_out_out_blk_n = tmp_15_out_out_full_n;
    end else begin
        tmp_15_out_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((p_neg393_i_cast_out_out_full_n == 1'b0) | (p_neg393_i_out_out_full_n == 1'b0) | (tmp_16_cast_out_out_full_n == 1'b0) | (tmp_16_out_out_full_n == 1'b0) | (tmp_15_out_out_full_n == 1'b0) | (rows_cast727_out_out_full_n == 1'b0) | (tmp_out_out_full_n == 1'b0) | (switch_out_out_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state2))) begin
        tmp_15_out_out_write = 1'b1;
    end else begin
        tmp_15_out_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        tmp_16_cast_out_out_blk_n = tmp_16_cast_out_out_full_n;
    end else begin
        tmp_16_cast_out_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((p_neg393_i_cast_out_out_full_n == 1'b0) | (p_neg393_i_out_out_full_n == 1'b0) | (tmp_16_cast_out_out_full_n == 1'b0) | (tmp_16_out_out_full_n == 1'b0) | (tmp_15_out_out_full_n == 1'b0) | (rows_cast727_out_out_full_n == 1'b0) | (tmp_out_out_full_n == 1'b0) | (switch_out_out_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state2))) begin
        tmp_16_cast_out_out_write = 1'b1;
    end else begin
        tmp_16_cast_out_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        tmp_16_out_out_blk_n = tmp_16_out_out_full_n;
    end else begin
        tmp_16_out_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((p_neg393_i_cast_out_out_full_n == 1'b0) | (p_neg393_i_out_out_full_n == 1'b0) | (tmp_16_cast_out_out_full_n == 1'b0) | (tmp_16_out_out_full_n == 1'b0) | (tmp_15_out_out_full_n == 1'b0) | (rows_cast727_out_out_full_n == 1'b0) | (tmp_out_out_full_n == 1'b0) | (switch_out_out_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state2))) begin
        tmp_16_out_out_write = 1'b1;
    end else begin
        tmp_16_out_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        tmp_out_out_blk_n = tmp_out_out_full_n;
    end else begin
        tmp_out_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((p_neg393_i_cast_out_out_full_n == 1'b0) | (p_neg393_i_out_out_full_n == 1'b0) | (tmp_16_cast_out_out_full_n == 1'b0) | (tmp_16_out_out_full_n == 1'b0) | (tmp_15_out_out_full_n == 1'b0) | (rows_cast727_out_out_full_n == 1'b0) | (tmp_out_out_full_n == 1'b0) | (switch_out_out_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state2))) begin
        tmp_out_out_write = 1'b1;
    end else begin
        tmp_out_out_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if ((~((p_neg393_i_cast_out_out_full_n == 1'b0) | (p_neg393_i_out_out_full_n == 1'b0) | (tmp_16_cast_out_out_full_n == 1'b0) | (tmp_16_out_out_full_n == 1'b0) | (tmp_15_out_out_full_n == 1'b0) | (rows_cast727_out_out_full_n == 1'b0) | (tmp_out_out_full_n == 1'b0) | (switch_out_out_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

always @ (*) begin
    ap_block_state1 = ((ap_start == 1'b0) | (ap_done_reg == 1'b1));
end

always @ (*) begin
    ap_block_state2 = ((p_neg393_i_cast_out_out_full_n == 1'b0) | (p_neg393_i_out_out_full_n == 1'b0) | (tmp_16_cast_out_out_full_n == 1'b0) | (tmp_16_out_out_full_n == 1'b0) | (tmp_15_out_out_full_n == 1'b0) | (rows_cast727_out_out_full_n == 1'b0) | (tmp_out_out_full_n == 1'b0) | (switch_out_out_full_n == 1'b0));
end

assign mode_off_i_fu_230_p2 = ($signed(32'd4294967295) + $signed(mode));

assign p_neg393_i_cast_out_out_din = p_neg393_i_i_fu_283_p2;

assign p_neg393_i_i_fu_283_p2 = ($signed(11'd2047) + $signed(tmp_38_fu_263_p1));

assign p_neg393_i_out_out_din = p_neg393_i_i_fu_283_p2;

assign rows_cast727_out_out_din = tmp_38_fu_263_p1;

assign switch_out_out_din = ((tmp_fu_236_p4 == 31'd0) ? 1'b1 : 1'b0);

assign tmp_15_out_out_din = (11'd2 + tmp_38_fu_263_p1);

assign tmp_16_cast_out_out_din = tmp_16_i_fu_275_p2;

assign tmp_16_i_fu_275_p2 = ($signed(11'd2047) + $signed(tmp_37_fu_252_p1));

assign tmp_16_out_out_din = tmp_16_i_fu_275_p2;

assign tmp_37_fu_252_p1 = cols[10:0];

assign tmp_38_fu_263_p1 = rows[10:0];

assign tmp_fu_236_p4 = {{mode_off_i_fu_230_p2[31:1]}};

assign tmp_out_out_din = (11'd2 + tmp_37_fu_252_p1);

endmodule //Block_arrayctor_loop
